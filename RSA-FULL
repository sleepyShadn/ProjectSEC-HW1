from tkinter import *        
import string

#RSA steps:
  # 1-Select p and q, two prime numbers. 
  # 2-Calculate n = p*q and z(n)=(p-1)(q-1).
  # 3-Select a number e such that 1 < e < z.    
  # 4-determine d  ed=1 mod t(n).
  # 5-A private key pair can be bundled as (n,d). 
  # 6-A public key pair can be packaged as (n,e). 


#2: find n and z(n)
def get_n(p,q):
    return p*q;

def get_zn(p,q):
    return (p-1)*(q-1); 


#3: find d
def gcd(x,y):
    if y==0:
        return x;
    else:
        return gcd(y,x%y);

#4: get the public key
def get_e(zn):
    e=2
    while gcd(zn,e)!=1:
          e=e+1;
    return e; 


#5: get the private key
def get_d(e, zn):
    n = 1 
    while (zn*n+1) % e != 0 and n < zn:
        n += 1
    if n == zn:
        raise ValueError("Couldn't find a valid d")
    d = (zn*n+1) // e
    return d

#6: RSA
def rsa(M, key_ed, n):
    return_data = 1 
    M = M % n
    while key_ed != 0:
        if key_ed % 2 == 1:
            return_data = (return_data * M) % n      
        M = (M * M) % n
        key_ed = key_ed // 2
    return return_data


#Encryption is defind as:
#entering text that hasn't been encrypted into cryptographic formulas.
def click_en():
    plaintext = plaintextvalue.get()
    zn = get_zn(2357, 1733)
    n = get_n(2357, 1733)
    e = get_e(zn)
    d = get_d(e, zn)

    print("Plaintext:", plaintext)
    print("Public Key:(", e, ",", n, ")")
    print("Private Key:(", d, ",", n, ")")

    plaintext1 = int(plaintext)
    ciphertext = rsa(plaintext1, e, n)

    print('Ciphertext: %s' % ciphertext)
    listboxEnc.insert(0, ciphertext)




  #Decryption is defind as:
#The process  of transforming encrypted  text into its original format.
def click_dec():
    ciphertext = ciphertextvalue.get()
    zn = get_zn(2357, 1733)
    n = get_n(2357, 1733)
    e = get_e(zn)
    d = get_d(e, zn)

    print("Ciphertext:", ciphertext)
    print("Public Key:(", e, ",", n, ")")
    print("Private Key:(", d, ",", n, ")")

    ciphertext = int(ciphertext)
    plaintext = rsa(ciphertext, d, n)

    print('Plaintext: %s' % plaintext)
    listboxDec.insert(0, plaintext)


#GUI
root = Tk()
root.geometry("500x400")
root.title("RSA Encryption and Decryption")

Mainlabel = Label(root, text="RSA Encryption and Decryption", font=('Arial', 16))
Mainlabel.pack(padx=20, pady=20)

Sidelabel=Label(root, text="you can enter numbers only", font=('Arial',10))
Sidelabel.pack(padx=10, pady=10)


# Encryption Section
enc_frame = Frame(root)
enc_frame.pack(pady=10)

labelOne = Label(enc_frame, text='Enter Plaintext:', font=(None, 12))
labelOne.grid(row=0, column=0, padx=5, pady=5)

plaintextvalue = Entry(enc_frame, width=30)
plaintextvalue.grid(row=0, column=1, padx=5, pady=5)

encbutton = Button(enc_frame, text="Encrypt", command=click_en)
encbutton.grid(row=0, column=2, padx=5, pady=5)

# Decryption Section
dec_frame = Frame(root)
dec_frame.pack(pady=10)

labelSec = Label(dec_frame, text='Enter Ciphertext:', font=(None, 12))
labelSec.grid(row=0, column=0, padx=5, pady=5)

ciphertextvalue = Entry(dec_frame, width=30)
ciphertextvalue.grid(row=0, column=1, padx=5, pady=5)

decbutton = Button(dec_frame, text="Decrypt", command=click_dec)
decbutton.grid(row=0, column=2, padx=5, pady=5)

# Output Section
output_frame = Frame(root)
output_frame.pack(pady=10)

showResultEnc = Label(output_frame, text='Ciphertext:', font=(None, 12))
showResultEnc.grid(row=0, column=0, padx=5, pady=5)

listboxEnc = Listbox(output_frame, height=1, width=30)        
listboxEnc.grid(row=0, column=1, padx=5, pady=5)

showResultDec = Label(output_frame, text='Plaintext:', font=(None, 12))
showResultDec.grid(row=1, column=0, padx=5, pady=5)

listboxDec = Listbox(output_frame, height=1, width=30)        
listboxDec.grid(row=1, column=1, padx=5, pady=5)

root.mainloop()


#Thank you!
