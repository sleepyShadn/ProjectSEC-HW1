#RSA steps:
  # 1-Select p and q, two prime numbers. 
  # 2-Calculate n = p*q and z(n)=(p-1)(q-1).
  # 3-Select a number e such that 1 < e < z.    
  # 4-determine d  ed=1 mod t(n).
  # 5-A private key pair can be bundled as (n,d). 
  # 6-A public key pair can be packaged as (n,e). 


#2: find n and z(n)
def get_n(p,q):
    return p*q;

def get_zn(p,q):
    return (p-1)*(q-1); 


#3: find d
def gcd(x,y):
    if y==0:
        return x;
    else:
        return gcd(y,x%y);

#4: get the public key
def get_e(zn):
    e=2
    while gcd(tn,e)!=1:
          e=e+1;
    return e; 


#5: get the private key
def get_d(e, zn):
  n=1 
  while (zn*n+1) % e !=0:
       n=n+1  
  d=(zn*n+1)/e
  return d

#6: RSA
def rsa(M, key_ed, n):
  return_data=1 
  M=M%n
  while key_ed != 0:
    if key_ed % 2 == 1:
      return_data = (return_data * M) % n      
    M=(M*M)%n
    key_ed=key_ed/2

  return return_data




